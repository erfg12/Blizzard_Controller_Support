name: Build & Release

on:
  workflow_dispatch:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rid: linux-x64
            ext: tar.gz
          - os: macos-latest
            rid: osx-arm64
            ext: tar.gz
          - os: windows-latest
            rid: win-x64
            ext: zip

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET latest 8.0
        uses: actions/setup-dotnet@v4
        with:
          channel: 8.0

      # ---------------- RESTORE ----------------
      - name: Restore (Windows)
        if: runner.os == 'Windows'
        run: dotnet restore Controller_v2.Desktop/Controller_v2.Desktop.csproj

      - name: Restore (Linux/macOS)
        if: runner.os != 'Windows'
        run: dotnet restore Controller.sln

      # ---------------- PUBLISH ----------------
      - name: Publish (Windows)
        if: runner.os == 'Windows'
        run: |
          Remove-Item -Recurse -Force bin\PublishOutputs\win-x64\Controller_v2.Desktop -ErrorAction SilentlyContinue
          dotnet publish Controller_v2.Desktop\Controller_v2.Desktop.csproj -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -o bin\PublishOutputs\win-x64\Controller_v2.Desktop

      - name: Publish (Linux/macOS)
        if: runner.os != 'Windows'
        run: dotnet publish Controller_v2.Desktop/Controller_v2.Desktop.csproj -c Release -r ${{ matrix.rid }} --self-contained true -p:PublishSingleFile=true -o bin/PublishOutputs/${{ matrix.rid }}/Controller_v2.Desktop

      # ---------------- PACKAGE ----------------
      - name: Package
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $tag = "${GITHUB_REF#refs/tags/}"
          if (-not $tag) { $tag = "manual-$(Get-Date -Format yyyyMMddHHmmss)" }
      
          $outDir = "bin/PublishOutputs/${{ matrix.rid }}/Controller_v2.Desktop"
          Set-Location $outDir
      
          if ("${{ matrix.ext }}" -eq "zip") {
            Compress-Archive -Path * -DestinationPath ../../../../MyApp-$tag-${{ matrix.rid }}.zip
          } else {
            tar -czf ../../../../MyApp-$tag-${{ matrix.rid }}.tar.gz *
          }
      - name: Package
        if: runner.os != 'Windows'
        run: |
          tag=${GITHUB_REF##*/}
          if [ -z "$tag" ]; then
            tag=manual-$(date +%Y%m%d%H%M%S)
          fi

          OUT_DIR=bin/PublishOutputs/${{ matrix.rid }}/Controller_v2.Desktop
          cd $OUT_DIR
          if [ "${{ matrix.ext }}" = "zip" ]; then
            zip -r ../../../../MyApp-${tag}-${{ matrix.rid }}.zip *
          else
            tar -czf ../../../../MyApp-${tag}-${{ matrix.rid }}.tar.gz *
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: MyApp-${{ matrix.rid }}
          path: MyApp-*.${{ matrix.ext }}

  # ---------------- RELEASE ----------------
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./dist

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: ./dist/**/*
